name: Frontend Tests

on:
  push:
    branches: [ main, develop ]
    paths: 
      - 'web/**'
      - '.github/workflows/frontend-tests.yml'
  pull_request:
    branches: [ main ]
    paths: 
      - 'web/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
    
    - name: Install dependencies
      working-directory: ./web
      run: npm ci
    
    - name: Lint code
      working-directory: ./web
      run: npm run lint
    
    - name: Run tests
      working-directory: ./web
      run: npm run test:coverage
    
    - name: Build application
      working-directory: ./web
      run: npm run build
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./web/coverage/coverage-final.json
        flags: frontend
        name: frontend-coverage
        fail_ci_if_error: false
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: web-build-${{ matrix.node-version }}
        path: web/dist/

  lighthouse:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
    
    - name: Install dependencies
      working-directory: ./web
      run: npm ci
    
    - name: Build application
      working-directory: ./web
      run: npm run build
    
    - name: Serve application
      working-directory: ./web
      run: |
        npm install -g serve
        serve -s dist -l 3000 &
        sleep 5
    
    - name: Run Lighthouse CI
      run: |
        npm install -g @lhci/cli@0.12.x
        lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}